var model = "Role";

function add()
{
  resetForm();
  $('.modal-title').text("Thêm loại tài khoản");
  $('#message').hide();
  $('#form').modal();
  $('#hd-action-type').val("1");
}

function update (object) {
  $('.modal-title').text("Cập nhật loại tài khoản");
  $('#hd-action-type').val("0");      
  $('#hd-object-id').val(object.id);
  $('#object-name').val(object.name); 
  
  $('#message').hide();
  $('#form').modal();
}

function drawObject(object, button) {
  var listItem = $('#list-item').DataTable();

  var _object = [
    object.id,
    object.name
  ];

  _object.push("<button type='button' id='btnUpdate"+ object.id +"' onClick='update("+JSON.stringify(object)+")' class='btn btn-primary update'>Cập nhật</button>");
  
  listItem.row.add(_object).draw();
}

function validate () {
  var name = $('#object-name').val();
  
  if(name == "") //name is null
  {
    $('#message').text("Loại tài khoản không được để trống!");
    $('#message').show();
    return false;
  }
  else
  {
    $('#message').hide();
    return true; 
  }
}

function save () {
  var status = validate();
  if(status)
  {
      var type = $('#hd-action-type').val();
      var name = $('#object-name').val();
      
      var obj = {
                "name": name
              };
      //If type == 0 -> action is update
      //Else action is create
      var data = null;
      if(type == 0)
      {
        var objectId = $('#hd-object-id').val();
        
        data = {
                      "from": model,
                      "action": "update",
                      "where": JSON.stringify({ "id": objectId}),
                      "updatedata": JSON.stringify(obj)
                  };
      }
      else
      {
        data = {
                      "from": model,
                      "action": "create",
                      "createdata": JSON.stringify(obj)
                  };
      }
      
      $.post("/services/model", data)
        .done(function(data) 
        {
          if(data.status == 1)
          {
            console.log(data);
            object = data.Role;
            //Get datatable
            var listItem = $('#list-item').DataTable();

            
            if(type == 0) //If action is update => remove old row
            {
              //Because we can update multiple rows => object will be an array not an object like insert
              object = object[0];

              //Get selected row
              var row = $("#btnUpdate"+object.id).closest('tr');
              row = row[0];
              //Get selected row id
              // var rowId = table.row( row ).index();
              listItem.row(row).remove();
            }

            
            drawObject(object, true);
            //.draw(false) to prevent datatable reload to page 1
            //Hiện tại vẫn còn 1 lỗi nhỏ: khi qua trang mới thì datatable ko tự chuyển trang được (sẽ fix sau)   
            
            $('#form').modal('hide');
            resetForm();
          }
          else
          {
            $('#message').text(data.message);
            $('#message').show();
          }
        })
        .fail(function(error)
        {
          $('#message').text('Không thể cập nhật '+_name);
          $('#message').show();
        });
  }
}
function resetForm()
{
  $('#object-name').val("");
}